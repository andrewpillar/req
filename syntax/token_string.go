// Code generated by "stringer -type token -linecomment"; DO NOT EDIT.

package syntax

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[_EOF-1]
	_ = x[_Name-2]
	_ = x[_Literal-3]
	_ = x[_Op-4]
	_ = x[_Semi-5]
	_ = x[_Comma-6]
	_ = x[_Colon-7]
	_ = x[_Dot-8]
	_ = x[_Arrow-9]
	_ = x[_Assign-10]
	_ = x[_Ref-11]
	_ = x[_Lbrace-12]
	_ = x[_Rbrace-13]
	_ = x[_Lbrack-14]
	_ = x[_Rbrack-15]
	_ = x[_If-16]
	_ = x[_Else-17]
	_ = x[_Match-18]
	_ = x[_Range-19]
}

const _token_name = "eofnameliteralopsemi or newline,:.->=${}[]ifelsematchrange"

var _token_index = [...]uint8{0, 3, 7, 14, 16, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 48, 53, 58}

func (i token) String() string {
	i -= 1
	if i >= token(len(_token_index)-1) {
		return "token(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _token_name[_token_index[i]:_token_index[i+1]]
}
